version: '3.8'
name: dlt-kafka

services:
  zookeeper:
    container_name: zookeeper
    image: zookeeper:latest
    ports:
      - '2181:2181'
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ALLOW_ANONYMOUS_LOGIN: yes
    networks:
      - kafka-net

  kafka:
    container_name: kafka
    image: bitnami/kafka:3.8.1
    ports:
      - '9092:9092'
    restart: always
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CFG_LISTENERS: PLAINTEXT_UI://:9091,PLAINTEXT://:9092,INTERNAL://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT_UI://kafka:9091,PLAINTEXT://kafka:9092,INTERNAL://kafka:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_UI:PLAINTEXT
    depends_on:
      - zookeeper
    networks:
      - kafka-net

  schema-registry:
    container_name: schema-registry
    image: confluentinc/cp-schema-registry:latest
    ports:
      - '8081:8081'
    restart: always
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9093
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
    depends_on:
      - zookeeper
      - kafka
    networks:
      - kafka-net

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - '9090:8080'
    restart: always
    environment:
      DYNAMIC_CONFIG_ENABLED: true
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9091
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry:8081
    depends_on:
      - kafka
      - schema-registry
    networks:
      - kafka-net

  postgres:
    container_name: local-postgres
    image: postgres:latest
    ports:
      - '5432:5432'
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ~/Documents/workspace/pg-data-v2:/var/lib/postgresql/data
    networks:
      - kafka-net

  redis:
    container_name: local-redis
    image: redis:latest
    ports:
      - '6379:6379'
    restart: always
    networks:
      - kafka-net

networks:
  kafka-net:
    driver: bridge